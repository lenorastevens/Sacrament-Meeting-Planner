@page "{id:min(1)}"
@model Sacrament_Meeting_Planner.Pages.Meetings.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Meeting</h4>
<hr />
<div class="row">
    <div class="col-md-5">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="MeetingId" asp-for="Meeting.Id" />
            <div class="form-group">
                <label asp-for="Meeting.Date" class="control-label"></label>
                <input asp-for="Meeting.Date" class="form-control" />
                <span asp-validation-for="Meeting.Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Meeting.Presiding" class="control-label"></label>
                <input asp-for="Meeting.Presiding" class="form-control" />
                <span asp-validation-for="Meeting.Presiding" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Meeting.Conducting" class="control-label"></label>
                <input asp-for="Meeting.Conducting" class="form-control" />
                <span asp-validation-for="Meeting.Conducting" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Meeting.OpeningHymn" class="control-label"></label>
                <input asp-for="Meeting.OpeningHymn" class="form-control" />
                <span asp-validation-for="Meeting.OpeningHymn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Meeting.Invocation" class="control-label"></label>
                <input asp-for="Meeting.Invocation" class="form-control" />
                <span asp-validation-for="Meeting.Invocation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Meeting.SacramentHymn" class="control-label"></label>
                <input asp-for="Meeting.SacramentHymn" class="form-control" />
                <span asp-validation-for="Meeting.SacramentHymn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Meeting.IntermediateHymn" class="control-label"></label>
                <input asp-for="Meeting.IntermediateHymn" class="form-control" />
                <span asp-validation-for="Meeting.IntermediateHymn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Meeting.ClosingHymn" class="control-label"></label>
                <input asp-for="Meeting.ClosingHymn" class="form-control" />
                <span asp-validation-for="Meeting.ClosingHymn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Meeting.Benediction" class="control-label"></label>
                <input asp-for="Meeting.Benediction" class="form-control" />
                <span asp-validation-for="Meeting.Benediction" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Meeting.SpeakerSubject" class="control-label"></label>
                <input asp-for="Meeting.SpeakerSubject" class="form-control" />
                <span asp-validation-for="Meeting.SpeakerSubject" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div id="addSpeakerContainer">
                    <button type="button" id="addSpeakerBtn" class="btn btn-primary">Add Speaker</button>
                    <div id="newSpeakerInput" style="display: none;">
                        <input asp-for="NewSpeaker" class="form-control" />
                        <span asp-validation-for="NewSpeaker" class="text-danger"></span>
                        <button type="button" id="cancelAddSpeakerBtn" class="btn btn-secondary mt-2">Cancel</button>
                    </div>
                </div>
                
            </div>

            <div class="form-group">
                <label class="control-label">Current Speakers</label>
                @foreach (var speaker in Model.Meeting.Speakers)
                {
                    <div>
                        <input type="hidden" name="speakerId" value="@speaker.Id" />
                        <span>@speaker.Name</span>
                        <button type="submit" formaction="./Edit?handler=RemoveSpeaker" formmethod="post" formnovalidate class="btn btn-danger btn-sm">Remove</button>
                    </div>
                }
            </div>


            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col-md-5">
        <img src="~/images/image2.png" alt="church stock photo" style="width: 100%; height: auto;">
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var addSpeakerBtn = document.getElementById("addSpeakerBtn");
            var addSpeakerInput = document.getElementById("newSpeakerInput");
            var addSpeakerSubmitBtn = document.getElementById("addSpeakerSubmitBtn");
            var cancelAddSpeakerBtn = document.getElementById("cancelAddSpeakerBtn");

            addSpeakerBtn.addEventListener("click", function () {
                addSpeakerBtn.style.display = "none";
                addSpeakerInput.style.display = "block";
                addSpeakerSubmitBtn.style.display = "inline-block";
            });

            cancelAddSpeakerBtn.addEventListener("click", function () {
                addSpeakerBtn.style.display = "inline-block";
                addSpeakerInput.style.display = "none";
                addSpeakerSubmitBtn.style.display = "none";
            });
        });


        document.getElementById("addSpeakerSubmitBtn").addEventListener("click", function () {
            var newSpeaker = document.getElementById("newSpeaker").value;

            // Make a POST request to call the C# method
            fetch("/Meetings/Edit?handler=OnPostAddSpeakerAsync", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    newSpeaker: newSpeaker
                })
            }).then(response => {
                if (response.ok) {
                    // Reload the page after adding the speaker
                    window.location.reload();
                }
            });
        });




    </script>
}
